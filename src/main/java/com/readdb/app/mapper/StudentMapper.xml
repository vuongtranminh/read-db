<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.readdb.app.dao.StudentMapper">
	<resultMap id="BaseResultMap" type="com.readdb.app.entity.StudentPo">
		<result column="student_name" jdbcType="VARCHAR" property="studentName" />
		<result column="updated_at" jdbcType="DATETIME" property="updatedAt" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<id column="id" jdbcType="BIGINT" property="id" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.readdb.app.entity.StudentPo">
		<result column="student_name" jdbcType="VARCHAR" property="studentName" />
		<result column="updated_at" jdbcType="DATETIME" property="updatedAt" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<id column="id" jdbcType="BIGINT" property="id" />
	</resultMap>
	<sql id="Base_Column_List">
		student_name, updated_at, price, id
	</sql>
	<sql id="Blob_Column_List">
		description
	</sql>
	<select id="selectAll" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from student
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from student where id = #{id, jdbcType=BIGINT}
	</select>
	<insert id="insert" parameterType="com.readdb.app.entity.StudentPo">
		insert into student (<include refid="Base_Column_List" />, <include refid="Blob_Column_List" />) 
		values (#{studentName, jdbcType=VARCHAR}, #{updatedAt, jdbcType=DATETIME}, #{price, jdbcType=DECIMAL}, #{description, jdbcType=LONGVARCHAR}, #{id, jdbcType=BIGINT})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.readdb.app.entity.StudentPo">
		update student
			<set>
				<if test="studentName != null">
					student_name = #{studentName, jdbcType=VARCHAR}, 
				</if>
				<if test="updatedAt != null">
					updated_at = #{updatedAt, jdbcType=DATETIME}, 
				</if>
				<if test="price != null">
					price = #{price, jdbcType=DECIMAL}, 
				</if>
				<if test="description != null">
					description = #{description, jdbcType=LONGVARCHAR}, 
				</if>
				<if test="id != null">
					id = #{id, jdbcType=BIGINT}, 
				</if>

			</set> 
		where id = #{id, jdbcType=BIGINT}
	</update>
	<delete id="deleteByPrimaryKey">
		delete from student whereid = #{id, jdbcType=BIGINT}
	</delete>
	<select id="pagination" parameterType="com.readdb.app.util.Pagination" resultMap="ResultMapWithBLOBs">
		select <include refid="Base_Column_List" />, <include refid="Blob_Column_List" /> from student 
		order by id desc 
		limit #{offset, jdbcType=BIGINT} ,#{limit,jdbcType=INTEGER}
	</select>
	<select id="countAll" resultType="java.lang.Long">
		select count(*) from student
	</select>
</mapper>